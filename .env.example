# OAMK Internship Certificate OCR System - Environment Configuration
# Copy this file to .env and edit with your actual values

# =============================================================================
# OCR ENGINE CONFIGURATION
# =============================================================================

# Path to Tesseract OCR executable (required for OCR fallback)
# Windows: C:\Program Files\Tesseract-OCR\tesseract.exe
# macOS/Linux: /usr/bin/tesseract (usually in PATH)
TESSERACT_CMD=

# Path to Google Cloud Vision API credentials JSON file (optional)
# Only needed if you want to use Google Vision API as fallback OCR
# Download from Google Cloud Console > APIs & Services > Credentials
GOOGLE_CLOUD_CREDENTIALS=

# =============================================================================
# GEMINI AI CONFIGURATION
# =============================================================================

# Google AI Studio API Key for Gemini (required for AI processing)
# Get from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=

# Gemini model to use (default: gemini-1.5-flash)
# Options: gemini-1.5-flash, gemini-1.5-pro, gemini-1.0-pro
GEMINI_MODEL=gemini-1.5-flash

# Maximum tokens for Gemini responses (default: 4096)
GEMINI_MAX_TOKENS=4096

# Temperature for Gemini responses (0.0-1.0, default: 0.1)
# Lower = more focused, Higher = more creative
GEMINI_TEMPERATURE=0.0

# Enable Gemini for text analysis and enhancement (true/false)
GEMINI_ENABLED=true

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================

# Directory where uploaded files will be stored temporarily
# Default: uploads/ (will be created automatically)
UPLOAD_DIR=uploads

# Maximum file size in bytes (default: 10MB)
# Increase for larger documents, decrease for security
MAX_FILE_SIZE=10485760

# =============================================================================
# OCR PROCESSING CONFIGURATION
# =============================================================================

# Minimum confidence score for OCR results (0-100)
# Lower values accept more uncertain results, higher values are more strict
OCR_CONFIDENCE_THRESHOLD=60.0

# Enable/disable image preprocessing (true/false)
# Preprocessing can improve OCR accuracy but takes more time
IMAGE_PREPROCESSING_ENABLED=true

# =============================================================================
# AI TEXT PROCESSING CONFIGURATION
# =============================================================================

# Enable AI-powered text cleaning and formatting (true/false)
AI_TEXT_CLEANING_ENABLED=true

# Enable AI-powered content analysis (true/false)
# Extracts key information like dates, names, companies, etc.
AI_CONTENT_ANALYSIS_ENABLED=true

# Enable AI-powered language detection and translation (true/false)
AI_LANGUAGE_PROCESSING_ENABLED=false

# AI processing timeout in seconds (default: 30)
AI_TIMEOUT=30

# =============================================================================
# API SERVER CONFIGURATION (for future web API)
# =============================================================================

# Server host (default: 0.0.0.0 for all interfaces)
HOST=0.0.0.0

# Server port (default: 8000)
PORT=8000

# Enable debug mode (true/false)
# Set to false in production
DEBUG=true

# CORS allowed origins (comma-separated)
# For web frontend integration
CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file path (optional, leave empty for console only)
LOG_FILE=

# Enable AI request/response logging (true/false)
# Useful for debugging but may log sensitive data
AI_LOGGING_ENABLED=false

# =============================================================================
# SECURITY CONFIGURATION (for production)
# =============================================================================

# Secret key for JWT tokens (generate with: python -c "import secrets; print(secrets.token_urlsafe(32))")
SECRET_KEY=

# API key for external integrations (optional)
API_KEY=

# Rate limiting for AI requests (requests per minute)
AI_RATE_LIMIT=60

# =============================================================================
# DATABASE CONFIGURATION (for future database integration)
# =============================================================================

# Database URL (for future database features)
# SQLite: sqlite:///./ocr_database.db
# PostgreSQL: postgresql://user:password@localhost/dbname
DATABASE_URL=

# =============================================================================
# PERFORMANCE CONFIGURATION
# =============================================================================

# Number of worker processes (for production deployment)
WORKERS=1

# Request timeout in seconds
REQUEST_TIMEOUT=300

# Maximum concurrent uploads
MAX_CONCURRENT_UPLOADS=5

# AI request concurrency limit
AI_CONCURRENT_REQUESTS=3 